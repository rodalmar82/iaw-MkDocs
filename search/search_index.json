{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"2023-03-09-practica02/","title":"iaw-practica02","text":""},{"location":"2023-03-09-practica02/#instalacion-de-lamp-sack-en-rhel-por-rodrigo-alarcon-marquez","title":"Instalaci\u00f3n de LAMP sack en RHEL por Rodrigo Alarc\u00f3n M\u00e1rquez","text":""},{"location":"2023-03-09-practica02/#1o-paso-creacion-de-estancia-en-amazon","title":"1\u00ba Paso: Creaci\u00f3n de Estancia en Amazon","text":"<p>Dentro de AWS Academy creamos una nueva estancia.</p> <p>Le tendremos que asignar un nombre, en aplicaciones escogeremos Red Hat y en el tipo de instancia tendremos que escoger una que posea al menos 2 GB de memoria.  </p> <p>La llave que escogeremos ser\u00e1 Vodkey y abriremos los puertos SSH, HTTPS y HTTP.</p> <p></p> <p></p>"},{"location":"2023-03-09-practica02/#2o-paso-ip-elastica","title":"2\u00ba Paso: IP Elastica","text":"<p>A la estancia que acabamos de crear deberemos de asignarle una IP elastica.</p> <p></p>"},{"location":"2023-03-09-practica02/#3o-paso-virtual-box","title":"3\u00ba Paso: Virtual Box","text":"<p>Abrimos Virtual Box y dentro del explorador remoto agregamos la nueva estancia con la clave que podemos encontrar conectando con la instancia en la secci\u00f3n SSH client.</p> <p></p>"},{"location":"2023-03-09-practica02/#4o-paso-conexion-con-cliente-ssh","title":"4\u00ba Paso: Conexi\u00f3n con cliente SSH","text":"<p>Dentro de Virtual Box conectamos con el cliente SSH haciendo click en la esquina verde inferior izquierda. Deberemos marcar que queremos trabajar con Linux y poner la direcci\u00f3n del cliente.</p> <p></p>"},{"location":"2023-03-09-practica02/#5o-paso-actualizacion-y-conexion-con-github","title":"5\u00ba Paso: Actualizaci\u00f3n y conexi\u00f3n con Github","text":"<p>Una vez hemos accedido, ya podemos trabajar con el terminal.</p> <p>Comenzaremos actualizando todos los repositorios con el comando:</p> <pre><code> sudo apt-get update.\n</code></pre> <p>A continuaci\u00f3n utilizaremos deberemos de instalar la extensi\u00f3n de git con el comando:  </p> <pre><code> sudo apt-get install git\n ```\n\nTras ello, asignaremos un nombre y correo electronico con los comandos:  \n```bash\n**git config --global user.name \"Nombre\"**\n\n **git config --global user.email \"correo@electronico .com\"**\n</code></pre> <p>Podr\u00e9mos comprobar el cambio con el comando: </p> <pre><code> **git config --list**\n</code></pre> <p>Por \u00faltimo enlazaremos virtual Box con un clon de nuestro repositorio de Git hub con el comando:  </p> <p>git clone https:// github.com/Nombre_de_Repositorio/taller-git-github.git</p> <p>Tras hacerlo, una carpeta con el nombre del repositorio deber\u00eda de haber aparecido en el \u00e1rbol de la izquierda.</p>"},{"location":"2023-03-09-practica02/#6o-paso-creacion-de-las-carpetas","title":"6\u00ba Paso: Creaci\u00f3n de las carpetas","text":"<p>Dentro del directorio recien creado (iaw-practica02 en mi caso), creamos las carpetas php y script.  </p> <p>Dentro de php crearemos un archivo llamado info.php y dentro de script crearemos otro archivo llamado lamp_tools-sh.</p> <p>Ser\u00e1 dentro de lamp_tools.sh donde escribiremos los comandos que automatizar\u00e1n las instalaciones.</p> <p></p>"},{"location":"2023-03-09-practica02/#7o-paso-creacion-del-script","title":"7\u00ba Paso: Creaci\u00f3n del script","text":"<p>Comenzamos el scrip con:</p> <pre><code>**#!/bin/bash**  \n**set -x**\n</code></pre> <p>Actualizamos los repositorios con el comando: </p> <pre><code>sudo dnf update\n</code></pre> <p>Instalamos el servidor web apache</p> <pre><code>dnf install httpd -y\n</code></pre> <p>Iniciamos el servidor web apache</p> <pre><code>systemctl start httpd\n</code></pre> <p>Habilitamos el servidor web apache</p> <pre><code>systemctl enable httpd\n</code></pre> <p>Abrir puertos en caso de tener activo Firewall</p> <pre><code>Firewall-cmd --zone=public --add-service=http\nFirewall-cmd --zone=public --add-service=https\n</code></pre> <p>Instalamos el servidor de MySQL</p> <pre><code>dnf install mysql-server -y\n</code></pre> <p>Iniciamos el servidor MySQL</p> <pre><code>systemctl start mysqld\n</code></pre> <p>Habilitamos el servidor MySQL</p> <pre><code>systemctl enable mysqld\n</code></pre> <p>Instalamos los m\u00f3dulos de PHP</p> <pre><code>dnf install php -y\n</code></pre> <p>Instalamos las extensiones de PHP</p> <pre><code>dnf install php-mysqlnd -y\n\ndnf install php-zip php-json php-fpm -y\n</code></pre> <p>Habilitamos el servidor de FPM</p> <pre><code>systemctl enable --now php-fpm\n</code></pre> <p>Reiniciamos Apache despues de la instalaci\u00f3n</p> <pre><code>systemctl restart httpd\n</code></pre> <p>Copiamos el archivo para ver que se ha instalado.</p> <pre><code>cp ../php/info.php /var/www/html\n</code></pre> <p>Instalamos los repositorios necesarios para phpMyAdmin</p> <pre><code>dnf install -y wget php-pdo php-pecl-zip php-common php-mbstring php-cli php-xml tar\ndnf install -y php-mbstring \n</code></pre> <p>Instalaci\u00f3n de phpMyAdmin</p> <pre><code>wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.\n</code></pre> <p>Descomprimimos el paquete</p> <pre><code>tar -zxvf phpMyAdmin-latest-all-languages.tar.gz\n</code></pre> <p>Instalamos Adminer  </p> <p>Para ello creamos un directorio para Adminer</p> <pre><code>mkdir /var/www/html/adminer\n</code></pre> <p>Descargamos el archivo de Adminer</p> <pre><code>wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1-mysql.php\n</code></pre> <p>Por ultimo daremos permisos al script con </p> <pre><code>chmod a+x lamp_tools.sh\n</code></pre> <p></p> <p></p>"},{"location":"2023-03-09-practica02/#paso-final-ejecutamos-el-script","title":"Paso final: Ejecutamos el script","text":"<p>Para ejecutarlo deberemos de  ejecutar dentro del directorio iaw-practica02 en el terminal el comando: </p> <pre><code>sudo ./lamp_tools.sh\n</code></pre> <p></p> <p></p>"},{"location":"2023-03-09-practica04/","title":"iaw-practica4","text":"<p>En esta pr\u00e1ctica habilitaremos el protocolo HTTPS en un sitio web ejecutado en nuestra instancia EC2 de Amazon</p> <p>Para esta practica vamos a necesitar:</p> <p>La IP publica de nuestra instancia EC2.</p> <p>Un correo electronico: en mi caso he utilizado \"rodalmar821@gmail.com\".</p> <p>Registrar un nombre de dominio: He utilizado la p\u00e1gina web \"N\"O-IP\".</p> <p>Una vez reunidos estos requisitos, deberemos de instalar Certbot en la instancia de EC2 por medio de comandos:</p> <p>set -x</p>"},{"location":"2023-03-09-practica04/#realizamos-la-instalacion-y-actualizacion-de-snapd","title":"Realizamos la instalaci\u00f3n y actualizaci\u00f3n de snapd.","text":"<p>sudo snap install core</p> <p>sudo snap refresh core</p>"},{"location":"2023-03-09-practica04/#eliminamos-si-existiene-alguna-instalacion-previa-de-certbot-con-apt","title":"Eliminamos si existiene alguna instalaci\u00f3n previa de certbot con apt.","text":"<p>sudo apt-get remove certbot</p>"},{"location":"2023-03-09-practica04/#instalamos-el-cliente-de-certbot-con-snapd-y-automatizamos-el-proceso","title":"Instalamos el cliente de Certbot con snapd y automatizamos el proceso.","text":"<p>sudo certbot --apache -m rodalmar821@gmail.com --agree-tos --no-eff-email -d iaw-practica4.ddns.net</p>"},{"location":"2023-03-09-practica04/#creamos-una-alias-para-el-comando-certbot","title":"Creamos una alias para el comando certbot.","text":"<p>sudo ln -s /snap/bin/certbot /usr/bin/certbot</p>"},{"location":"2023-03-09-practica04/#obtenemos-el-certificado-y-configuramos-el-servidor-web-apache","title":"Obtenemos el certificado y configuramos el servidor Web Apache.","text":""},{"location":"2023-03-09-practica04/#de-no-haber-automatizado-el-script-de-arriba-tendremos-que-poner-nuestro-correo-a-mano-indicar-yes-en-la-primera-opcion-indicar-no-en-la-segunda-y-poner-el-dominio-iaw-practica4ddnsnet-al-final-pero-si-lo-automatizamos-no-sera-necesario","title":"De no haber automatizado el script de arriba tendremos que poner nuestro correo a mano, indicar \"Yes\" en la primera opci\u00f3n, indicar \"No\" en la segunda y poner el dominio \"iaw-practica4.ddns.net\" al final. Pero si lo automatizamos no sera necesario.","text":"<p>sudo certbot --apache</p>"},{"location":"2023-03-09-practica04/#lo-ajustamos-para-que-renueve-el-dominio-cuando-se-vaya-a-agotar-el-tiempo","title":"Lo ajustamos para que renueve el dominio cuando se vaya a agotar el tiempo","text":"<p>systemctl list-timers Al terminar nos dar\u00e1 el certificado con la direcci\u00f3n del dominio de esta manera:</p> <p></p> <p>Para llegar a nuestro objetivo final, tendremos que tomar la direcci\u00f3n que nos d\u00e1 junto al cerficiado y con ella dirig\u00edrnos a la aplicaci\u00f3n web instalada en nuestro EC2.</p> <p>Si todos los pasos que hemos estado siguiendo se han realizado correctamente, nos deber\u00eda indicar que la p\u00e1gina es segura en el candado a la izquieda de la direcci\u00f3n.</p> <p></p> <p>La direcci\u00f3n del dominio que hemos habilitado es \"iaw-practica4.ddns.net\"</p>"}]}